---
- name: Collect system information and send to remote server
  hosts: localhost
  become: yes
  gather_facts: yes  # Set to 'yes' so ansible_date_time is gathered
  vars:
    output_file: "/tmp/system_info_{{ inventory_hostname }}_{{ ansible_date_time.iso8601_basic }}.log"
  tasks:
    - name: Generate system information output file
      shell: |
        {
          echo "==== Process Information ===="
          ps aux | grep -E 'httpd|nginx|apache2'
          ps aux | grep -E 'mysql|mariadb'
          ps aux | grep postgres
          ps aux | grep pmon
          ps aux | grep mongo
          ps aux | grep -E 'mysql|mariadb|postgres|oracle|mongo|mssql'
          ps aux
          ps -ef

          echo "==== Web Server Configurations ===="
          nginx -T 2>/dev/null
          apache2 -S 2>/dev/null
          apache2ctl -S 2>/dev/null
          httpd -S 2>/dev/null

          echo "==== Open Ports and Connections ===="
          netstat -plant
          netstat -tulpn
          netstat -tulnp | grep -E '80|443'
          ss
          netstat -plant | grep -i listen

          echo "==== System Services Status ===="
          systemctl status mysql
          systemctl status mariadb
          systemctl status postgresql
          lsnrctl status
          systemctl status mongod
          systemctl status mssql-server
          systemctl status apache2.service
          systemctl status php-fpm
          systemctl list-units --state=running
          systemctl list-unit-files

          echo "==== Web Server Configurations ===="
          grep -R "ServerName" /etc/httpd/
          grep -R "ServerName" /etc/apache2/
          grep -R "server_name" /etc/nginx/
          grep DocumentRoot /etc/httpd/conf/httpd.conf
          grep DocumentRoot /etc/apache2/sites-available/*.conf
          grep root /etc/nginx/sites-available/*.conf
          grep -Ri "DocumentRoot" /etc/apache2/
          grep -Ri "server_name" /etc/nginx/
          grep -Ri "fastcgi_pass" /etc/nginx/

          echo "==== PHP Information ===="
          php -v
          php -m
          apachectl -M | grep php

          echo "==== Docker Information ===="
          docker ps
          docker ps -a
          docker images -a
          docker images

          echo "==== System Information ===="
          uname -a
          ifconfig -a
          ip a
          ip route show
          netstat -nr
          fdisk -l
          rpm -qa --last
          vgdisplay
          lvdisplay
          pvs
          vgs
          lsblk -d
          lsblk
          blkid
          lsscsi
          cat /etc/fstab
          cat /etc/resolv.conf
          mount
          cat /etc/*release
          cat /etc/hosts
          ls -l /dev/mapper
          cat /boot/grub/menu.lst
          cat /boot/grub2/grub.cfg | grep -v ^#
          cat /boot/grub2/grub.cfg
          lvs -a -o +devices -P
          lvs --segments
          lvs -o+lv_layout,stripes
          lvs -a -o+lv_layout,lv_role,stripes,devices
          free -g
          lscpu
          df -h
          cat /etc/passwd
          cat /etc/shadow
          cat /etc/group
          ls -l /boot
        } > "{{ output_file }}"

    - name: Copy system information to remote server
      ansible.builtin.copy:
        src: "{{ output_file }}"
        dest: "/home/svc_aux/backup/{{ inventory_hostname }}_{{ ansible_date_time.iso8601_basic }}.out"
        remote_src: yes

    - name: Clean up local temporary file
      file:
        path: "{{ output_file }}"
        state: absent
