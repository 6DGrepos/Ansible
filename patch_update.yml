---
- name: Check Filesystem and Repository Status
  hosts: ubuntu_servers
  become: yes
  vars:
    min_space_mb: 500
    status_file: "/home/svc_aux/backup/patchstatus/system_status.csv"

  tasks:
    - name: Remove existing status file
      ansible.builtin.file:
        path: "{{ status_file }}"
        state: absent
      delegate_to: 10.1.34.26
      run_once: true

    - name: Create new status file with header
      ansible.builtin.lineinfile:
        path: "{{ status_file }}"
        line: "hostname,filesystem_status,filesystem_details,repo_status,repo_details"
        create: yes
      delegate_to: 10.1.34.26
      run_once: true

    - name: Initialize status
      set_fact:
        system_status:
          hostname: "{{ inventory_hostname }}"
          filesystem_status: "SUCCESS"
          filesystem_details: "All filesystems have sufficient space"
          repo_status: "SUCCESS"
          repo_details: "No issues detected"

    # Filesystem Check
    - name: Check available space in filesystems
      ansible.builtin.shell: df -m {{ item }} | awk 'NR==2 {print $4}'
      register: available_space
      loop:
        - /
        - /boot
        - /var
      ignore_errors: yes

    - name: Verify sufficient space
      ansible.builtin.set_fact:
        insufficient_space: "{{ insufficient_space | default([]) + [item.item] }}"
      loop: "{{ available_space.results }}"
      when: item.stdout|int < min_space_mb

    - name: Set filesystem check status
      set_fact:
        system_status: "{{ system_status | combine({
          'filesystem_status': 'FAILED',
          'filesystem_details': 'Insufficient space in ' + (insufficient_space | join(', '))
        }) }}"
      when: insufficient_space is defined and insufficient_space | length > 0

    # Repository Check
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
      register: apt_update_result
      ignore_errors: yes

    - name: Check if repos are up-to-date and valid
      ansible.builtin.command: apt-get update
      args:
        warn: false
      register: apt_check_result
      changed_when: false
      failed_when: false

    - name: Set repository check status
      set_fact:
        system_status: "{{ system_status | combine({
          'repo_status': 'FAILED',
          'repo_details': apt_update_result.msg if apt_update_result is failed else (apt_check_result.stderr if apt_check_result.rc != 0 else 'No issues detected')
        }) }}"
      when: apt_update_result is failed or apt_check_result.rc != 0

    # Update Status File
    - name: Update status file
      ansible.builtin.lineinfile:
        path: "{{ status_file }}"
        line: "{{ system_status.hostname }},{{ system_status.filesystem_status }},{{ system_status.filesystem_details | replace(',', ';') }},{{ system_status.repo_status }},{{ system_status.repo_details | replace(',', ';') }}"
        insertafter: EOF
      delegate_to: 10.1.34.26

    - name: Display system status
      ansible.builtin.debug:
        var: system_status
