---
- name: Patch Ubuntu servers
  hosts: all
  become: yes
  vars:
    local_patch_status_file: "/tmp/patchstatus.out"
    remote_patch_status_file: "/home/svc_aux/backup/patchstatus/patchstatus.out"
    min_free_space_mb: 1024  # Minimum free space required in MB
  tasks:
    - name: Check free space on /
      command: df -m --output=avail /
      register: root_fs
      changed_when: false

    - name: Check free space on /boot
      command: df -m --output=avail /boot
      register: boot_fs
      changed_when: false

    - name: Check free space on /var
      command: df -m --output=avail /var
      register: var_fs
      changed_when: false

    - name: Validate free space
      fail:
        msg: "Insufficient free space on {{ item.mount }}"
      when: item.avail | int < min_free_space_mb
      with_items:
        - { mount: '/', avail: "{{ root_fs.stdout_lines[1] }}" }
        - { mount: '/boot', avail: "{{ boot_fs.stdout_lines[1] }}" }
        - { mount: '/var', avail: "{{ var_fs.stdout_lines[1] }}" }
      ignore_errors: yes
      register: free_space_check

    - name: Check if all repositories are valid
      command: apt-get update
      register: apt_update
      changed_when: false
      failed_when: "'Err' in apt_update.stderr"
      ignore_errors: yes

    - name: Gather patch status
      shell: uname -r
      register: kernel_version

    - name: Create patch status report for failed checks
      lineinfile:
        path: "{{ local_patch_status_file }}"
        line: "Hostname,File system check,Repo check,Patch update,List of patches updated,Reboot required\n{{ inventory_hostname }},{{ 'Failed' if free_space_check is failed else 'success' }},{{ 'Failed' if apt_update is failed else 'success' }},Failed,none,No"
        create: yes
      when: free_space_check is failed or apt_update is failed
      ignore_errors: yes

    - name: Skip patching if checks failed
      meta: end_play
      when: free_space_check is failed or apt_update is failed

    - name: Patch the server
      apt:
        upgrade: dist
      register: apt_upgrade
      when: apt_update is succeeded
      ignore_errors: yes

    - name: Check if reboot is required
      command: needs-restarting -r
      register: reboot_required
      changed_when: false
      when: apt_upgrade is succeeded
      ignore_errors: yes

    - name: Create patch status report for successful checks
      lineinfile:
        path: "{{ local_patch_status_file }}"
        line: "{{ inventory_hostname }},success,success,{{ 'success' if apt_upgrade is succeeded else 'Failed' }},{{ apt_upgrade.stdout_lines | join(' ') | default('No patches available to update') }},{{ 'yes' if reboot_required.rc == 1 else 'No' }}"
        create: yes
      when: free_space_check is succeeded and apt_update is succeeded and apt_upgrade is succeeded and reboot_required is succeeded
      ignore_errors: yes

    - name: Copy patch status report to remote server
      copy:
        src: "{{ local_patch_status_file }}"
        dest: "{{ remote_patch_status_file }}"
      delegate_to: 10.1.34.26
      run_once: true
