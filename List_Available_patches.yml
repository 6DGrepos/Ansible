---
- name: Check for available updates and save to CSV
  hosts: all
  become: yes
  vars:
    csv_file: "/home/svc_aux/backup/patchinformation/patchlist.csv"
  tasks:
    - name: Ensure directory exists
      ansible.builtin.file:
        path: "/home/svc_aux/backup/patchinformation"
        state: directory
        mode: '0755'

    - name: Clear existing CSV file
      ansible.builtin.file:
        path: "{{ csv_file }}"
        state: absent

    - name: Create new CSV file with header
      ansible.builtin.copy:
        content: "Hostname,Package,Version,Repository\n"
        dest: "{{ csv_file }}"
        mode: '0644'

    - name: Check for updates on RedHat-based systems
      ansible.builtin.shell: dnf list updates
      register: dnf_updates
      when: ansible_os_family == "RedHat"
      changed_when: false

    - name: Check for updates on Debian-based systems
      ansible.builtin.shell: apt list --upgradable
      register: apt_updates
      when: ansible_os_family == "Debian"
      changed_when: false

    - name: Parse and append RedHat updates to CSV
      ansible.builtin.shell: |
        echo "{{ dnf_updates.stdout }}" | awk 'NR>1 {print "{{ inventory_hostname }}," $1 "," $2 "," $3}' >> {{ csv_file }}
      when: ansible_os_family == "RedHat" and dnf_updates.stdout_lines|length > 1

    - name: Parse and append Debian updates to CSV
      ansible.builtin.shell: |
        echo "{{ apt_updates.stdout }}" | awk -F'/' '/Inst/ {print "{{ inventory_hostname }}," $1 "," $2 "," $NF}' >> {{ csv_file }}
      when: ansible_os_family == "Debian" and apt_updates.stdout_lines|length > 1
