---
- name: Patch Ubuntu Servers with Filesystem Checks
  hosts: ubuntu_servers
  become: yes
  vars:
    min_disk_space_mb: 1000  # Minimum required disk space in MB
    csv_file_path: "/home/svc_aux/backup/patchstatus/patch_status.csv"
    csv_header: "Hostname,File system check,Repo check,Patch update,List of patches updated,Reboot required\n"

  tasks:
    - name: Ensure CSV file exists with header if missing
      block:
        - name: Check if CSV file exists and has the header
          shell: "grep -q '^Hostname' {{ csv_file_path }} || echo 'missing'"
          register: csv_header_check
          changed_when: false

        - name: Add header if not present
          lineinfile:
            path: "{{ csv_file_path }}"
            line: "{{ csv_header.strip() }}"
            create: yes
            insertafter: EOF
          when: csv_header_check.stdout == "missing"

    - name: Check root disk space
      shell: "df --output=avail / | tail -n 1"
      register: root_disk_space
      ignore_errors: yes

    - name: Check var disk space
      shell: "df --output=avail /var | tail -n 1"
      register: var_disk_space
      ignore_errors: yes

    - name: Check boot disk space
      shell: "df --output=avail /boot | tail -n 1"
      register: boot_disk_space
      ignore_errors: yes

    - name: Validate repositories
      shell: "apt-get update"
      register: repo_status
      ignore_errors: yes

    - name: Apply patches and list changes
      apt:
        upgrade: dist
      register: patch_result
      ignore_errors: yes
      when:
        - root_disk_space.stdout | int >= min_disk_space_mb
        - var_disk_space.stdout | int >= min_disk_space_mb
        - boot_disk_space.stdout | int >= min_disk_space_mb
        - repo_status.rc == 0

    - name: Get list of updated packages
      shell: "apt list --upgradable 2>/dev/null"
      register: patch_list
      changed_when: false
      when: patch_result is succeeded

    - name: Check if reboot is required
      shell: "if [ -f /var/run/reboot-required ]; then echo yes; else echo no; fi"
      register: reboot_required
      changed_when: false

    - name: Create patch status report template
      template:
        src: patch_status_template.j2
        dest: /tmp/patch_status_report.txt

    - name: Append patch status to CSV
      copy:
        src: /tmp/patch_status_report.txt
        dest: "{{ csv_file_path }}"
        remote_src: yes
        mode: '0644'
        append: yes

---
