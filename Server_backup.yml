---
- name: Collect command outputs and backup to remote server
  hosts: all
  become: yes
  vars:
    output_dir: "/tmp/command_outputs"
    backup_server: "10.1.128.84"
    backup_path: "/home/svc_aux/backup"
    current_date: "{{ ansible_date_time.date }}"

  tasks:
    - name: Create directory to store outputs on the target server
      file:
        path: "{{ output_dir }}"
        state: directory
        mode: '0755'

    - name: Execute commands and save output to a log file
      shell: |
        echo "==== Command Output for {{ inventory_hostname }} on {{ current_date }} ====" > {{ output_dir }}/{{ inventory_hostname }}_info_{{ current_date }}.log
        echo "==== Process Checks ====" >> {{ output_dir }}/{{ inventory_hostname }}_info_{{ current_date }}.log
        ps aux | grep -E 'httpd|nginx|apache2' || echo "httpd/nginx/apache2 not found" >> {{ output_dir }}/{{ inventory_hostname }}_info_{{ current_date }}.log
        ps aux | grep -E 'mysql|mariadb' || echo "Command not available: ps aux for mysql/mariadb" >> {{ output_file }}
        ps aux | grep postgres || echo "PostgreSQL not found" >> {{ output_dir }}/{{ inventory_hostname }}_info_{{ current_date }}.log
        ps aux | grep pmon || echo "Command not available: ps aux for pmon" >> {{ output_file }}
        ps aux | grep mongo || echo "Command not available: ps aux for mongo" >> {{ output_file }}
        ps aux | grep -E 'mysql|mariadb|postgres|oracle|mongo|mssql' || echo "Command not available: ps aux for database services" >> {{ output_file }}
        ps aux || echo "Command not available: ps aux" >> {{ output_file }}
        ps -ef || echo "Command not available: ps -ef" >> {{ output_file }}
        echo "==== Web Server Configurations ====" >> {{ output_file }}
        nginx -T 2>/dev/null || echo "Command not available: nginx -T" >> {{ output_file }}
        apache2 -S 2>/dev/null || echo "Command not available: apache2 -S" >> {{ output_file }}
        apache2ctl -S 2>/dev/null || echo "Command not available: apache2ctl -S" >> {{ output_file }}
        httpd -S 2>/dev/null || echo "Command not available: httpd -S" >> {{ output_file }}

        echo "==== Open Ports and Connections ====" >> {{ output_file }}
        netstat -plant || echo "Command not available: netstat -plant" >> {{ output_file }}
        netstat -tulpn || echo "Command not available: netstat -tulpn" >> {{ output_file }}
        netstat -tulnp | grep -E '80|443' || echo "Command not available: netstat for ports 80/443" >> {{ output_file }}
        ss || echo "Command not available: ss" >> {{ output_file }}
        netstat -plant | grep -i listen || echo "Command not available: netstat for listen" >> {{ output_file }}

        echo "==== System Services Status ====" >> {{ output_file }}
        systemctl status mysql || echo "Service not available: mysql" >> {{ output_file }}
        systemctl status mariadb || echo "Service not available: mariadb" >> {{ output_file }}
        systemctl status postgresql || echo "Service not available: postgresql" >> {{ output_file }}
        lsnrctl status || echo "Service not available: lsnrctl" >> {{ output_file }}
        systemctl status mongod || echo "Service not available: mongod" >> {{ output_file }}
        systemctl status mssql-server || echo "Service not available: mssql-server" >> {{ output_file }}
        systemctl status apache2.service || echo "Service not available: apache2" >> {{ output_file }}
        systemctl status php-fpm || echo "Service not available: php-fpm" >> {{ output_file }}
        systemctl list-units --state=running || echo "Command not available: systemctl list-units" >> {{ output_file }}
        systemctl list-unit-files || echo "Command not available: systemctl list-unit-files" >> {{ output_file }}

        echo "==== Web Server Configurations ====" >> {{ output_file }}
        grep -R "ServerName" /etc/httpd/ || echo "Command not available: grep ServerName in /etc/httpd/" >> {{ output_file }}
        grep -R "ServerName" /etc/apache2/ || echo "Command not available: grep ServerName in /etc/apache2/" >> {{ output_file }}
        grep -R "server_name" /etc/nginx/ || echo "Command not available: grep server_name in /etc/nginx/" >> {{ output_file }}
        grep DocumentRoot /etc/httpd/conf/httpd.conf || echo "Command not available: grep DocumentRoot in /etc/httpd/" >> {{ output_file }}
        grep DocumentRoot /etc/apache2/sites-available/*.conf || echo "Command not available: grep DocumentRoot in /etc/apache2/sites-available/" >> {{ output_file }}
        grep root /etc/nginx/sites-available/*.conf || echo "Command not available: grep root in /etc/nginx/sites-available/" >> {{ output_file }}
        grep -Ri "DocumentRoot" /etc/apache2/ || echo "Command not available: grep DocumentRoot recursively in /etc/apache2/" >> {{ output_file }}
        grep -Ri "server_name" /etc/nginx/ || echo "Command not available: grep server_name recursively in /etc/nginx/" >> {{ output_file }}
        grep -Ri "fastcgi_pass" /etc/nginx/ || echo "Command not available: grep fastcgi_pass recursively in /etc/nginx/" >> {{ output_file }}

        echo "==== PHP Information ====" >> {{ output_file }}
        php -v || echo "Command not available: php -v" >> {{ output_file }}
        php -m || echo "Command not available: php -m" >> {{ output_file }}
        apachectl -M | grep php || echo "Command not available: apachectl for php" >> {{ output_file }}

        echo "==== Docker Information ====" >> {{ output_file }}
        docker ps || echo "Command not available: docker ps" >> {{ output_file }}
        docker ps -a || echo "Command not available: docker ps -a" >> {{ output_file }}
        docker images -a || echo "Command not available: docker images -a" >> {{ output_file }}
        docker images || echo "Command not available: docker images" >> {{ output_file }}

        echo "==== System Information ====" >> {{ output_file }}
        uname -a || echo "Command not available: uname -a" >> {{ output_file }}
        ifconfig -a || echo "Command not available: ifconfig -a" >> {{ output_file }}
        ip a || echo "Command not available: ip a" >> {{ output_file }}
        ip route show || echo "Command not available: ip route show" >> {{ output_file }}
        netstat -nr || echo "Command not available: netstat -nr" >> {{ output_file }}
        fdisk -l || echo "Command not available: fdisk -l" >> {{ output_file }}
        rpm -qa --last || echo "Command not available: rpm -qa" >> {{ output_file }}
        vgdisplay || echo "Command not available: vgdisplay" >> {{ output_file }}
        lvdisplay || echo "Command not available: lvdisplay" >> {{ output_file }}
        pvs || echo "Command not available: pvs" >> {{ output_file }}
        vgs || echo "Command not available: vgs" >> {{ output_file }}
        lsblk -d || echo "Command not available: lsblk -d" >> {{ output_file }}
        lsblk || echo "Command not available: lsblk" >> {{ output_file }}
        blkid || echo "Command not available: blkid" >> {{ output_file }}
        lsscsi || echo "Command not available: lsscsi" >> {{ output_file }}
        cat /etc/fstab || echo "Command not available: cat /etc/fstab" >> {{ output_file }}
        cat /etc/resolv.conf || echo "Command not available: cat /etc/resolv.conf" >> {{ output_file }}
        mount || echo "Command not available: mount" >> {{ output_file }}
        cat /etc/*release || echo "Command not available: cat /etc/*release" >> {{ output_file }}
        cat /etc/hosts || echo "Command not available: cat /etc/hosts" >> {{ output_file }}
        ls -l /dev/mapper || echo "Command not available: ls -l /dev/mapper" >> {{ output_file }}
        cat /boot/grub/menu.lst || echo "Command not available: cat /boot/grub/menu.lst" >> {{ output_file }}
        cat /boot/grub2/grub.cfg | grep -v ^# || echo "Command not available: cat /boot/grub2/grub.cfg" >> {{ output_file }}
        cat /boot/grub2/grub.cfg || echo "Command not available: cat /boot/grub2/grub.cfg" >> {{ output_file }}
        lvs || echo "Command not available: lvs" >> {{ output_file }}
        lvs -a -o+devices || echo "Command not available: lvs -a -o+devices" >> {{ output_file }}
        
    - name: Write command output to log file
      copy:
        content: "{{ command_output.stdout }}"
        dest: "{{ output_dir }}/{{ inventory_hostname }}_info_{{ current_date }}.log"
        mode: '0644'

- name: Create directory on the Ansible controller for fetched files
  hosts: localhost
  tasks:
    - name: Create directory for storing fetched files
      file:
        path: "/tmp/command_outputs"
        state: directory
        mode: '0755'

- name: Fetch logs from target servers and store locally
  fetch:
    src: "{{ output_dir }}/{{ inventory_hostname }}_info_{{ current_date }}.log"
    dest: "/tmp/command_outputs/"
    flat: yes
    fail_on_missing: no

- name: Backup files to remote server
  synchronize:
    src: "/tmp/command_outputs/"
    dest: "{{ backup_path }}"
    mode: push
    host: "{{ backup_server }}"
    recursive: yes
