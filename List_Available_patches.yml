---
- name: Check and list available updates for all servers
  hosts: all
  gather_facts: true

  tasks:
    - name: Check for updates on Rocky Linux
      shell: "dnf list updates"
      when: ansible_facts['os_family'] == 'RedHat'
      register: dnf_updates
      ignore_errors: true

    - name: Check for updates on Debian-based systems
      shell: "apt list --upgradable"
      when: ansible_facts['os_family'] == 'Debian'
      register: apt_updates
      ignore_errors: true

    - name: Set dnf updates output variable if dnf updates exist
      set_fact:
        dnf_updates_stdout: "{{ dnf_updates.stdout if dnf_updates.stdout is defined else '' }}"
      when: ansible_facts['os_family'] == 'RedHat' and dnf_updates is defined

    - name: Set apt updates output variable if apt updates exist
      set_fact:
        apt_updates_stdout: "{{ apt_updates.stdout if apt_updates.stdout is defined else '' }}"
      when: ansible_facts['os_family'] == 'Debian' and apt_updates is defined

    - name: Ensure both dnf and apt updates outputs are defined
      set_fact:
        dnf_updates_stdout: "{{ dnf_updates_stdout | default('') }}"
        apt_updates_stdout: "{{ apt_updates_stdout | default('') }}"

    - name: Format output for each server with headers and footers
      set_fact:
        update_message: |
          -------------------------------
          {{ ansible_hostname }}:
          {% if dnf_updates_stdout %}
            DNF updates:
            {{ dnf_updates_stdout | indent(4) }}
          {% endif %}
          {% if apt_updates_stdout %}
            Apt updates:
            {{ apt_updates_stdout | indent(4) }}
          {% endif %}
          -------------------------------

    - name: Append formatted output to a file on each server
      copy:
        content: "{{ update_message }}"
        dest: "/tmp/available_updates_{{ ansible_hostname }}.txt"
