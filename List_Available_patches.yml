---
- name: List available patches for Linux servers
  hosts: all
  become: yes
  tasks:
    - name: Identify the Linux distribution
      ansible.builtin.shell: |
        if [ -f /etc/os-release ]; then
          . /etc/os-release && echo $ID
        else
          echo "unknown"
        fi
      register: distro
      changed_when: false

    - name: List available updates for Red Hat-based systems
      when: distro.stdout in ["rhel", "centos", "rocky", "almalinux"]
      ansible.builtin.shell: |
        if command -v dnf > /dev/null 2>&1; then
          dnf check-update
        else
          yum check-update
        fi
      register: redhat_updates
      failed_when: redhat_updates.rc not in [0, 100]
      changed_when: false

    - name: Save Red Hat-based updates to CSV
      when: distro.stdout in ["rhel", "centos", "rocky", "almalinux"]
      ansible.builtin.copy:
        content: |
          Hostname,Package,Details
          {% for line in redhat_updates.stdout_lines %}
          {{ inventory_hostname }},{{ line | regex_replace(' +', ',') }}
          {% endfor %}
        dest: /tmp/patchlist_{{ inventory_hostname }}.csv

    - name: List available updates for Debian-based systems
      when: distro.stdout in ["debian", "ubuntu"]
      ansible.builtin.shell: |
        apt update -qq && apt list --upgradable 2>/dev/null
      register: debian_updates
      failed_when: false
      changed_when: false

    - name: Save Debian-based updates to CSV
      when: distro.stdout in ["debian", "ubuntu"]
      ansible.builtin.copy:
        content: |
          Hostname,Package,Details
          {% for line in debian_updates.stdout_lines if not line.startswith('Listing...') %}
          {{ inventory_hostname }},{{ line | regex_replace(' +', ',') }}
          {% endfor %}
        dest: /tmp/patchlist_{{ inventory_hostname }}.csv

    - name: Handle unknown distributions
      when: distro.stdout not in ["rhel", "centos", "rocky", "almalinux", "debian", "ubuntu"]
      ansible.builtin.copy:
        content: |
          Hostname,Status
          {{ inventory_hostname }},Unsupported Linux Distribution ({{ distro.stdout }})
        dest: /tmp/patchlist_{{ inventory_hostname }}.csv

    - name: Transfer patch list to remote server
      ansible.builtin.copy:
        src: /tmp/patchlist_{{ inventory_hostname }}.csv
        dest: "10.1.34.26:/home/svc_aux/backup/patchinformation/patchlist_{{ inventory_hostname }}.csv"
        mode: '0644'
