---
- name: List available patches for Linux servers
  hosts: all
  become: yes
  tasks:
    - name: Identify the Linux distribution
      ansible.builtin.shell: |
        if [ -f /etc/os-release ]; then
          . /etc/os-release && echo $ID
        else
          echo "unknown"
        fi
      register: distro
      changed_when: false

    - name: Gather patch information for Red Hat-based systems
      when: distro.stdout in ["rhel", "centos", "rocky", "almalinux"]
      ansible.builtin.shell: |
        if command -v dnf > /dev/null 2>&1; then
          dnf check-update
        else
          yum check-update
        fi
      register: redhat_updates
      failed_when: redhat_updates.rc not in [0, 100]
      changed_when: false

    - name: Gather patch information for Debian-based systems
      when: distro.stdout in ["debian", "ubuntu"]
      ansible.builtin.shell: |
        apt update -qq && apt list --upgradable 2>/dev/null
      register: debian_updates
      failed_when: false
      changed_when: false

    - name: Save patch information locally on managed host
      ansible.builtin.copy:
        content: |
          Hostname,Package,Details
          {% if distro.stdout in ["rhel", "centos", "rocky", "almalinux"] %}
          {% for line in redhat_updates.stdout_lines %}
          {{ inventory_hostname }},{{ line | regex_replace(' +', ',') }}
          {% endfor %}
          {% elif distro.stdout in ["debian", "ubuntu"] %}
          {% for line in debian_updates.stdout_lines if not line.startswith('Listing...') %}
          {{ inventory_hostname }},{{ line | regex_replace(' +', ',') }}
          {% endfor %}
          {% else %}
          {{ inventory_hostname }},Unsupported Linux Distribution ({{ distro.stdout }})
          {% endif %}
        dest: /tmp/patchlist_{{ inventory_hostname }}.csv

- name: Consolidate and transfer patch information
  hosts: localhost
  tasks:
    - name: Fetch patch files from all hosts
      ansible.builtin.fetch:
        src: /tmp/patchlist_{{ inventory_hostname }}.csv
        dest: /tmp/patchlist_data/
        flat: yes

    - name: Consolidate all patch lists into one file
      ansible.builtin.shell: |
        cat /tmp/patchlist_data/*.csv > /tmp/patchlist.csv
      args:
        executable: /bin/bash

    - name: Transfer consolidated patch list to remote server
      ansible.builtin.copy:
        src: /tmp/patchlist.csv
        dest: "10.1.34.26:/home/svc_aux/backup/patchinformation/patchlist.csv"
        mode: '0644'
