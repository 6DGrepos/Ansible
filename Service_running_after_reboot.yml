---
- name: Compare services after reboot
  hosts: all
  remote_user: svc_aux
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: no
  tasks:
    - name: Get the hostname with domain using hostname -f
      ansible.builtin.command: uname -n
      register: fqdn_output

    - name: Create directory for service files using FQDN
      ansible.builtin.file:
        path: "/home/svc_aux/backup/files/{{ fqdn_output.stdout }}"
        state: directory
      delegate_to: 10.1.34.26

    - name: Clear previous comparison result
      ansible.builtin.file:
        path: "/home/svc_aux/backup/files/{{ fqdn_output.stdout }}/comparison_result.txt"
        state: absent
      delegate_to: 10.1.34.26

    - name: Collect running services after reboot
      ansible.builtin.shell: >
        systemctl list-units --type=service --state=running |
        awk 'NR>1 && $1 !~ /^(LOAD|ACTIVE|SUB)$/ {print $1}' |
        awk 'NF > 0'
      register: running_services_after_reboot

    - name: Save running services after reboot to a file
      ansible.builtin.copy:
        content: "{{ running_services_after_reboot.stdout }}"
        dest: "/home/svc_aux/backup/files/{{ fqdn_output.stdout }}/running_services_after_reboot.txt"
      delegate_to: 10.1.34.26

    - name: Check if running_services_before_reboot.txt exists
      ansible.builtin.stat:
        path: "/home/svc_aux/backup/files/{{ fqdn_output.stdout }}/running_services_before_reboot.txt"
      delegate_to: 10.1.34.26
      register: before_file_check

    - name: Compare services and generate report
      ansible.builtin.shell: |
        bash -c '
        before_file="/home/svc_aux/backup/files/{{ fqdn_output.stdout }}/running_services_before_reboot.txt"
        after_file="/home/svc_aux/backup/files/{{ fqdn_output.stdout }}/running_services_after_reboot.txt"
        result_file="/home/svc_aux/backup/files/{{ fqdn_output.stdout }}/comparison_result.txt"

        if [ -f "$before_file" ]; then
          diff_output=$(comm -23 <(sort "$before_file") <(sort "$after_file"))
          if [ -z "$diff_output" ]; then
            echo "All services that were running before the reboot are still running after the reboot." > "$result_file"
          else
            echo "Services not running after reboot:" > "$result_file"
            echo "$diff_output" >> "$result_file"
          fi
        else
          echo "No data available for comparison." > "$result_file"
        fi
        '
      when: before_file_check.stat.exists or not before_file_check.stat.exists
      delegate_to: 10.1.34.26

- name: Convert CSV to HTML on remote server
  hosts: 10.1.34.26
  remote_user: svc_aux
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  tasks:
    - name: Convert CSV to HTML
      command: python3 /home/svc_aux/backup/files/new_convert.py
      args:
        chdir: /home/svc_aux/backup/files/

- name: Update central CSV file
  hosts: 10.1.34.26
  become: yes
  become_method: sudo
  become_user: root
  vars:
    ansible_become_pass: just44now
  tasks:
    - name: Ensure directory exists
      ansible.builtin.file:
        path: /home/svc_aux/backup/All_Servers_information
        state: directory
        mode: '0775'
        owner: root
        group: root

    - name: Create or truncate CSV file with header
      ansible.builtin.copy:
        content: "Hostname,IP Address,OS Version,Database Information,Database Version,PHP Version,Web Services,All Running Services\n"
        dest: "/home/svc_aux/backup/All_Servers_information/All_server_information.csv"
        mode: '0664'
        owner: svc_aux
        group: svc_aux

    - name: Append gathered information to CSV file
      ansible.builtin.lineinfile:
        path: "/home/svc_aux/backup/All_Servers_information/All_server_information.csv"
        line: "{{ hostvars[item]['csv_data'] }}"
      loop: "{{ groups['all'] }}"
      when: 
        - hostvars[item]['csv_data'] is defined
        - item != '10.1.34.26'
