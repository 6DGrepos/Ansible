---
- name: Check and compare services after reboot
  hosts: all
  tasks:
    - name: Gather facts
      ansible.builtin.setup:
        gather_subset: all

    - name: Get the hostname with domain using hostname -f
      ansible.builtin.command: hostname -f
      register: fqdn_output

    - name: Debug FQDN output
      ansible.builtin.debug:
        msg: "FQDN: {{ fqdn_output.stdout }}"

    - name: Create directory using FQDN
      ansible.builtin.file:
        path: "/home/svc_aux/backup/files/{{ fqdn_output.stdout }}"
        state: directory
      delegate_to: 10.1.34.26

    - name: Check system uptime in seconds
      ansible.builtin.command: awk '{print $1}' /proc/uptime
      register: uptime_seconds

    - name: Debug uptime
      ansible.builtin.debug:
        msg: "System uptime in seconds: {{ uptime_seconds.stdout | float }}"

    - name: Write message if server was not rebooted recently
      ansible.builtin.copy:
        content: "The server is not rebooted after patching."
        dest: "/home/svc_aux/backup/files/{{ fqdn_output.stdout }}/uptime_status.txt"
      when: uptime_seconds.stdout | float > 3600  # Check if uptime is more than 1 hour
      delegate_to: 10.1.34.26

    - name: Perform after reboot tasks only if server rebooted recently
      block:
        - name: Collect running services after reboot
          ansible.builtin.shell: |
            systemctl list-units --type=service --state=running |
            awk '/.service/{print $1}' | awk 'NF > 0'
          register: running_services_after_reboot

        - name: Save running services after reboot to a file on remote server
          ansible.builtin.copy:
            content: "{{ running_services_after_reboot.stdout_lines | join('\n') }}"
            dest: "/home/svc_aux/backup/files/{{ fqdn_output.stdout }}/running_services_after_reboot.txt"
          delegate_to: 10.1.34.26

        - name: Ensure before reboot file exists
          ansible.builtin.file:
            path: "/home/svc_aux/backup/files/{{ fqdn_output.stdout }}/running_services_before_reboot.txt"
            state: touch

        - name: Compare services and save the result using bash
          ansible.builtin.shell: |
            bash -c '
            diff_output=$(comm -23 <(sort /home/svc_aux/backup/files/{{ fqdn_output.stdout }}/running_services_before_reboot.txt) <(sort /home/svc_aux/backup/files/{{ fqdn_output.stdout }}/running_services_after_reboot.txt))
            if [ -z "$diff_output" ]; then
              echo "All services that were running before the reboot are still running after the reboot." > /home/svc_aux/backup/files/{{ fqdn_output.stdout }}/comparison_result.txt
            else
              echo "Services not running after reboot:" > /home/svc_aux/backup/files/{{ fqdn_output.stdout }}/comparison_result.txt
              echo "$diff_output" >> /home/svc_aux/backup/files/{{ fqdn_output.stdout }}/comparison_result.txt
            fi
            '
          delegate_to: 10.1.34.26
      when: uptime_seconds.stdout | float <= 3600  # Check if uptime is less than or equal to 1 hour
