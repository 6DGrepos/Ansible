---
- name: List available patches for Linux systems
  hosts: all
  become: yes
  vars:
    remote_output_dir: "/tmp"
    output_server: "10.1.34.26"
    output_file: "/home/svc_aux/backup/patchinformation/patchlist.txt"

  tasks:
    - name: Ensure output directory exists on output server
      file:
        path: "/home/svc_aux/backup/patchinformation"
        state: directory
      delegate_to: "{{ output_server }}"
      run_once: true

    - name: Clear previous content of the output file
      file:
        path: "{{ output_file }}"
        state: absent
      delegate_to: "{{ output_server }}"
      run_once: true

    - name: Create empty output file
      file:
        path: "{{ output_file }}"
        state: touch
      delegate_to: "{{ output_server }}"
      run_once: true

    - name: Get hostname
      command: uname -n
      register: hostname
      changed_when: false

    - name: List available updates for Red Hat-based systems
      dnf:
        list: updates
      register: redhat_updates
      when: ansible_os_family == "RedHat"

    - name: List available updates for Debian-based systems
      apt:
        update_cache: yes
      register: debian_updates
      when: ansible_os_family == "Debian"

    - name: Generate patch list for Red Hat-based systems
      template:
        src: redhat_patches.j2
        dest: "{{ remote_output_dir }}/{{ inventory_hostname }}_patches.txt"
      when: ansible_os_family == "RedHat"

    - name: Generate patch list for Debian-based systems
      shell: apt list --upgradable
      register: debian_patch_list
      when: ansible_os_family == "Debian"

    - name: Write Debian patch list to file
      copy:
        content: "{{ hostname.stdout }}\n\n{{ debian_patch_list.stdout }}"
        dest: "{{ remote_output_dir }}/{{ inventory_hostname }}_patches.txt"
      when: ansible_os_family == "Debian"

    - name: Append patch lists to output file on output server
      shell: |
        echo "{{ hostname.stdout }}" >> {{ output_file }}
        cat {{ remote_output_dir }}/{{ inventory_hostname }}_patches.txt >> {{ output_file }}
        echo "" >> {{ output_file }}
      delegate_to: "{{ output_server }}"

    - name: Cleanup temporary files
      file:
        path: "{{ remote_output_dir }}/{{ inventory_hostname }}_patches.txt"
        state: absent

- name: Sort and deduplicate the output file
  hosts: "{{ output_server }}"
  become: yes
  vars:
    output_server: "10.1.34.26"
    output_file: "/home/svc_aux/backup/patchinformation/patchlist.txt"

  tasks:
    - name: Sort and deduplicate the output file
      shell: |
        sort -u {{ output_file }} > {{ output_file }}.tmp
        mv {{ output_file }}.tmp {{ output_file }}
